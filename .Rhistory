(1-0.81**2)/93
sqrt((1-0.81**2)/93)
-1.8/sqrt((1-0.81**2)/93)
-0.81/sqrt((1-0.81**2)/93)
-1.8+1.96*sqrt((1-0.81**2)/93)
-1.8.1.96*sqrt((1-0.81**2)/93)
-1.8-1.96*sqrt((1-0.81**2)/93)
-0.8-1.96*sqrt((1-0.81**2)/93)
-0.8+1.96*sqrt((1-0.81**2)/93)
-0.81+1.96*sqrt((1-0.81**2)/93)
-0.81-1.96*sqrt((1-0.81**2)/93)
datos<-arima.sim(n=10000,model=list(ar=c(-1.8,-0.81))
datos<-arima.sim(n=10000,model=list(ar=c(-1.8,-0.81)))
datos<-arima.sim(n=10000,model=list(ar=c(-1.8,-0.81)))
head(acf(datos)$acf[,,1],5)
head(pacf(datos)$acf[,,1],5)
-1.8*-9.77-0.81*9.63
-1.8*9.7857+0.81*9.77
A=matrix(c(1,2,3,4,5,6),ncol=2)
A=matrix(c(1,2,3,4,5,6),ncol=2)
media=apply(A,1,mean)
media
A
S=var(A)
A=matrix(c(1,2,3,4,5,6),ncol=2)
media=apply(A,2,mean)
S=var(A)
(A-media)%*%S%*%t((A-media))
sum((A-media)%*%S%*%t((A-media)))
A=matrix(cbind(rnorm(100),rnorm(100)),ncol=2)
media=apply(A,2,mean)
S=var(A)
sum((A-media)%*%S%*%t((A-media)))
media
S
A=matrix(cbind(rnorm(100),rnorm(100)),ncol=2)
media=apply(A,2,mean)
S=var(A)
sum((A-media)%*%S%*%t((A-media)))
d=matrix(0,100,2)
for(i in 1:100)
for(j in 1:2)
d[i,j]=(A[i,j]-media)%*%S%*%t((A[i,j]-media))
for(i in 1:100)
for(j in 1:2)
d[i,j]=(A[i,j]-media)%*%S%*%(A[i,j]-media)
sum(d)
for(i in 1:100)
for(j in 1:100)
d[i,j]=(A[i,]-media)%*%S%*%(A[j,]-media)
for(i in 1:100)
for(j in 1:100)
d[i,j]=(A[i,]-media)%*%S%*%t((A[j,]-media))
A
A[i,]-media
(A[j,]-media)
t((A[j,]-media))
for(i in 1:100)
for(j in 1:100)
d[i,j]=t((A[i,]-media))%*%S%*%t(t((A[j,]-media)))
t((A[i,]-media))%*%S
t(t((A[j,]-media)))
t((A[i,]-media))%*%S%*%t(t((A[j,]-media)))
for(i in 1:100)
for(j in 1:100)
d[i,j]=as.numeric(t((A[i,]-media))%*%S%*%t(t((A[j,]-media))))
A=matrix(cbind(rnorm(100),rnorm(100)),ncol=2)
media=apply(A,2,mean)
S=var(A)
sum((A-media)%*%S%*%t((A-media)))
d=matrix(0,100,100)
for(i in 1:100)
for(j in 1:100)
d[i,j]=as.numeric(t((A[i,]-media))%*%S%*%t(t((A[j,]-media))))
sum(d)
(A-media)
(A)
install.packages(mvnormalTest)
install.packages("mvnormalTest")
require(mvnormalTest)
mardia(A)
A=matrix(cbind(rnorm(100),rnorm(100)),ncol=2)
media=apply(A,2,mean)
S=var(A)
sum((A-media)%*%S%*%t((A-media)))/100**2
sum((A-media)%*%S%*%t((A-media)))/(6*100)
A=matrix(cbind(rnorm(100),rnorm(100)),ncol=2)
media=apply(A,2,mean)
S=var(A)
mardia(A)
sum((A-media)%*%S%*%t((A-media)))/(6*100)
set.seed(123)
A=matrix(cbind(rnorm(100),rnorm(100)),ncol=2)
media=apply(A,2,mean)
S=var(A)
mardia(A)
sum((A-media)%*%S%*%t((A-media)))/(6*100)
d=matrix(0,100,100)
for(i in 1:100)
for(j in 1:100)
d[i,j]=as.numeric(t((A[i,]-media))%*%S%*%t(t((A[j,]-media))))**3
sum(d)
sum(d)/(100*6)
set.seed(123)
A=matrix(cbind(rnorm(100),rnorm(100)),ncol=2)
media=apply(A,2,mean)
S=var(A)
mardia(A)
sum(((A-media)%*%S%*%t((A-media)))**3)/(6*100)
set.seed(123)
A=matrix(cbind(rnorm(100),rnorm(100)),ncol=2)
media=apply(A,2,mean)
S=var(A)
mardia(A)
sum(((A-media)%*%S%*%t((A-media)))**3)/(100**2)
set.seed(123)
A=matrix(cbind(rnorm(100),rnorm(100)),ncol=2)
media=apply(A,2,mean)
S=var(A)
mardia(A)
100/6*sum(((A-media)%*%S%*%t((A-media)))**3)/(100**2)
A
head(A)
media
mardia(A)
for(i in 1:100)
for(j in 1:100)
d[i,j]=as.numeric(t((A[i,]-media))%*%S%*%t(t((A[j,]-media))))**3
sum(d)/(100*6)
media
sum(diag(d**2)/100)
diag(d)
d=matrix(0,100,100)
for(i in 1:100)
for(j in 1:100)
d[i,j]=as.numeric(t((A[i,]-media))%*%S%*%t(t((A[j,]-media))))
sum(diag(d)/100)
sum(diag(d)**2/100)
mardia(A)
A[i,]
(sum(diag(d)**2/100)-8)/sqrt(8*2*4/100)
sum(diag(d)**2/100)
head(A)
datos=arima.sim(n=N,model=list(ar=c(0.9),ma=c(0,0,0.5)))
N=10000
datos=arima.sim(n=N,model=list(ar=c(0.9),ma=c(0,0,0.5)))
?arima.sim
N=10000
datos=arima.sim(n=N,model=list(ar=c(0.9),ma=c(0,0,0.5),sd=1))
acf(datos)
N=10000
datos=arima.sim(n=N,model=list(ar=c(0.9),ma=c(0,0,0.5),sd=1))
acf(datos,type="covariance")$acf[,,1]
9.69295927/10.33802047
set.seed(6713)
N=10000
datos=arima.sim(n=N,model=list(ar=c(0.9),ma=c(0,0,0.5),sd=1))
acf(datos)$acf[,,1]
set.seed(6713)
N=100000
datos=arima.sim(n=N,model=list(ar=c(0.9),ma=c(0,0,0.5),sd=1))
acf(datos)$acf[,,1]
set.seed(6713)
N=1000000
datos=arima.sim(n=N,model=list(ar=c(0.9),ma=c(0,0,0.5),sd=1))
acf(datos)$acf[,,1]
set.seed(6713)
N=1000000
datos=arima.sim(n=N,model=list(ar=c(0.9),sd=1))
acf(datos)$acf[,,1]
set.seed(6713)
N=1000000
datos=arima.sim(n=N,model=list(ar=c(0.9),ma=c(0,0,0.5),sd=1))
acf(datos)$acf[,,1]
